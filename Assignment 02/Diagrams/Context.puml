@startuml

' External Actors
actor "Attendee" as Attendee
actor "Admin" as Admin
actor "Event Organizer" as EventOrganizer

' External Systems
rectangle "PCI-DSS Compliant Payment Gateway" as PaymentGateway
rectangle "Email/SMS Notification Service" as NotificationService
database "Database Server" as Database

' System Boundary: BookMyShow
package "BookMyShow Application" {

    ' Subsystems
    rectangle "User Registration \nand Authentication" as Registration
    rectangle "Event Browsing \nand Discovery" as EventBrowsing
    rectangle "Seat Booking \nand Availability" as SeatBooking
    rectangle "Payment Processing" as PaymentProcessing
    rectangle "Admin Panel" as AdminPanel
    rectangle "Notifications \nand Alerts" as Notifications
    rectangle "Event Management" as EventManagement
    rectangle "User Profile Management" as UserProfile
}

' Relationships between actors and system components
Attendee --> Registration : Sign Up/Login
Attendee --> EventBrowsing : Browse Events
Attendee --> SeatBooking : Book Tickets
Attendee --> PaymentProcessing : Pay for Tickets
Attendee --> Notifications : Receive Digital Tickets/Updates
Attendee --> UserProfile : Manage Profile

Admin --> AdminPanel : Manage Users, Events, and Bookings
Admin --> EventManagement : Approve/Modify/Delete Events
Admin --> Notifications : Send Promotional Notifications

EventOrganizer --> EventManagement : Create/Update Event Details

' External System Interactions
EventManagement --> Database : Store Event Information
SeatBooking --> Database : Update Seat Availability
Registration --> Database : Manage User Accounts
UserProfile --> Database : Retrieve/Update User Data

PaymentProcessing --> PaymentGateway : Secure Payment Processing
Notifications --> NotificationService : Send Emails/SMS for Digital Tickets

@enduml
